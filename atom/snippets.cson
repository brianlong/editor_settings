# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
'.source.ruby':
  'Snippet Name':
    'prefix': 'hello'
    'body': 'Hello World!'
  'Describe Class':
    'prefix': 'dclass'
    'body': "# ${0:Describe This Class}\n#\n# * Attributes:\n#   - :attribute => description\n# * Validates:\n#   - Describe attribute validations\n# * Relationships:\n#   - Describe ActiveRecord relationships to other models.\n# * Constraints:\n#   - Describe the constraints in the class or database\n# * Raises:\n#   - Exception => When the Exception is raised.\n# * Examples:\n#     Indent example code two spaces for best formatting after 'rake doc:app'"
  'Describe Def':
    'prefix': 'ddef'
    'body': '# ${0:Describe This Method}\n#\n# * Options:\n#   - :option => Description\n# * Returns:\n#   - Description\n# * Raises:\n#   - Exception -> Description\n# * Examples:\n#     Example_Code'
  'Describe Module':
    'prefix': 'dmod'
    'body': "# ${0:Describe This Module}\n#\n# * Examples:\n#     Example_Code"
  'Create a new test':
    'prefix': 'test'
    'body': "test \"${1:the_truth}\" do\n  assert_equal ${2:true}, ${3:true}\nend"
  'Begin rescue end block':
    'prefix': 'begin'
    'body': "begin\n  ${1:# code here...}\nrescue StandardError => e\n  ${2:# rescue here}\nend # begin"
  'Factory Class':
    'prefix': 'factory'
    'body': "class ${1:ExampleFactory}\n  attr_reader :${2:attribute_1}, :${3:attribute_1}, :${4:etc}\n\n  def initialize(p = {})\n    @p = p\n  end\n\n  def build\n    private_build\n    return true\n  rescue StandardError => e\n    @error = e\n    return false\n  end\n\n  def build!\n    private_build\n    true\n  end\n\n  private\n    def private_build\n      ${5:# Build Code Here...}\n    end\nend"
  'FactoryTest Class':
    'prefix': 'factory_test'
    'body': "require 'test_helper'\n\nclass ${1:ExampleFactoryTest} < ActiveSupport::TestCase\n  def setup\n  end\n\n  test 'bad build' do\n    example = ExampleFactory.new\n    assert_equal false, example.build\n  end\n\n  test 'bad build!' do\n    example = ExampleFactory.new\n    assert_raises StandardError do\n      example.build!\n      end\n  end\nend"
